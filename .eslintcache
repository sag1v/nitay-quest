[{"/Users/sagivbengiat/cloned_projects/nitay-sagiv/src/App.js":"1","/Users/sagivbengiat/cloned_projects/nitay-sagiv/src/reportWebVitals.js":"2","/Users/sagivbengiat/cloned_projects/nitay-sagiv/src/index.js":"3","/Users/sagivbengiat/cloned_projects/nitay-sagiv/src/Questions.js":"4","/Users/sagivbengiat/cloned_projects/nitay-sagiv/src/Modal.js":"5","/Users/sagivbengiat/cloned_projects/nitay-sagiv/src/data.js":"6","/Users/sagivbengiat/cloned_projects/nitay-sagiv/src/Done.js":"7"},{"size":3118,"mtime":1608849693835,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1608836988449,"results":"10","hashOfConfig":"9"},{"size":146,"mtime":1608846445071,"results":"11","hashOfConfig":"9"},{"size":2723,"mtime":1608854872878,"results":"12","hashOfConfig":"9"},{"size":2227,"mtime":1608852380100,"results":"13","hashOfConfig":"9"},{"size":2483,"mtime":1608856300729,"results":"14","hashOfConfig":"9"},{"size":923,"mtime":1608850821604,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rgcmq5",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sagivbengiat/cloned_projects/nitay-sagiv/src/App.js",[],"/Users/sagivbengiat/cloned_projects/nitay-sagiv/src/reportWebVitals.js",[],"/Users/sagivbengiat/cloned_projects/nitay-sagiv/src/index.js",[],"/Users/sagivbengiat/cloned_projects/nitay-sagiv/src/Questions.js",[],"/Users/sagivbengiat/cloned_projects/nitay-sagiv/src/Modal.js",["31","32","33"],"import { useState, forwardRef } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport sadImage from \"./sad.gif\";\nimport happyImage from \"./happy.gif\";\n\nconst phrases = {\n  happy: {\n    title: \"תשובה נכונה!\",\n    content: \"אתה טוב, המשך כך\",\n    action: \"המשך לשאלה הבאה\",\n  },\n  sad: {\n    title: \"תשובה לא נכונה\",\n    content: \"לא נורא, תמיד אפשר לנסות שוב\",\n    action: \"נסה שנית\",\n  },\n};\n\nconst ModalImage = ({type}) => {\n    return <img style={{width: \"100%\"}} src={type === \"happy\" ? happyImage : sadImage} />\n}\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst Modal = ({ type, onClose, open }) => {\n  if (!type) {\n    return null;\n  }\n  const phrase = phrases[type];\n  return (\n    <Dialog\n      open={open}\n      fullScreen\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={onClose}\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n    >\n      <DialogTitle id=\"alert-dialog-slide-title\">\n        <Typography variant=\"h4\">{phrase.title}</Typography>\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\">\n          <Typography variant=\"h5\">{phrase.content}</Typography>\n        </DialogContentText>\n        <ModalImage type={type} />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          fullWidth\n          size=\"large\"\n          variant=\"contained\"\n          onClick={onClose}\n          color={type === \"happy\" ? \"primary\" : \"secondary\"}\n        >\n          {phrase.action}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default Modal;\n","/Users/sagivbengiat/cloned_projects/nitay-sagiv/src/data.js",[],"/Users/sagivbengiat/cloned_projects/nitay-sagiv/src/Done.js",["34","35","36"],{"ruleId":"37","severity":1,"message":"38","line":1,"column":10,"nodeType":"39","messageId":"40","endLine":1,"endColumn":18},{"ruleId":"37","severity":1,"message":"41","line":2,"column":8,"nodeType":"39","messageId":"40","endLine":2,"endColumn":12},{"ruleId":"42","severity":1,"message":"43","line":28,"column":12,"nodeType":"44","endLine":28,"endColumn":90},{"ruleId":"37","severity":1,"message":"45","line":5,"column":10,"nodeType":"39","messageId":"40","endLine":5,"endColumn":17},{"ruleId":"42","severity":1,"message":"43","line":24,"column":9,"nodeType":"44","endLine":24,"endColumn":61},{"ruleId":"42","severity":1,"message":"43","line":25,"column":9,"nodeType":"44","endLine":25,"endColumn":60},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Divider' is defined but never used."]